<launch>
  <arg name="/use_sim_time" default="true"/>

  <!-- This node does the servoing calculations     -->

  <node name="servo_server" pkg="moveit_servo" type="servo_server" output="screen" ns="my_gen3_right">
    <rosparam command="load" file="$(find toy_assembly)/config/servo-config-gen3_right.yaml" />
  </node> 
  <group ns="my_gen3_right">
    <node name="right_arm" pkg="toy_assembly" type="right_robot_arm.py" output="screen" />
  </group>
     
  <node name="servo_server" pkg="moveit_servo" type="servo_server" output="screen" ns="my_gen3_left">
    <rosparam command="load" file="$(find toy_assembly)/config/servo-config-gen3_left.yaml" />
  </node> 
  <group ns="my_gen3_left">
    <node name="left_arm" pkg="toy_assembly" type="left_robot_arm.py" output="screen" />
  </group>
 

  <include file="$(find toy_assembly)/launch/pcl_segment.launch" > 
    <arg name="arm" value="left"/>
  </include>


  <include file="$(find toy_assembly)/launch/pcl_segment.launch" > 
    <arg name="arm" value="right"/>
  </include>

  <arg name="right_x0" default="0"/>
  <arg name="right_y0" default="-0.4"/>
  <arg name="right_z0" default="0"/>
  <arg name="left_x0" default="-0.005"/>
  <arg name="left_y0" default="0.4"/>
  <arg name="left_z0" default="0"/>

  <node name="dual_arm_transform_right" pkg="tf" type="static_transform_publisher" output="screen" args="$(arg right_x0) $(arg right_y0) $(arg right_z0) 0.0 0.0 0.0 world right_base_link  50"/>
  <node name="dual_arm_transform_left" pkg="tf" type="static_transform_publisher" output="screen" args="$(arg left_x0) $(arg left_y0) $(arg left_z0) 0.0 0.0 0.0 world left_base_link  50"/>



<!--
    <node name="overlay_image" pkg="toy_assembly" type="overlay_image.py" output="screen" >  
    <arg name="real" value="false"/>
  </node>
  <node name="transcribe" pkg="toy_assembly" type="audio.py" output="screen" >
    <param name="threshold"  value="0.015" />
    <param name="silent_wait" value="5" />
    <param name="max_duration"  value="15" />
    <param name="debug"  value="True" />
  </node>
  <node name="robot_speech" pkg="toy_assembly" type="robot_speech.py" output="screen" >  </node>
  <node name="ada_services" pkg="toy_assembly" type="ada_client.py" output="screen" />


  <node name="gpt" pkg="toy_assembly" type="gpt_service.py" output="screen" >  </node>

  <node name="object_track" pkg="toy_assembly" type="object_tracking.py" output="screen" >  </node>
  <node name="head_track" pkg="toy_assembly" type="rivr_head_tracking.py" output="screen" >  </node>
  <node name="gaze" pkg="toy_assembly" type="gaze.py" output="screen" >  </node>
  <node name="gaze_target" pkg="toy_assembly" type="gaze_target.py" output="screen" >  </node>
  <node name="bayesgaze" pkg="toy_assembly" type="bayesgaze.py" output="screen" >  </node>

  <node name="slot_detect" pkg="toy_assembly" type="ros_slot_detection.py" output="screen" >  </node>

  <node name="robot_part_tracking" pkg="toy_assembly" type="robot_part_tracking.py" output="screen" >  </node>
  <node name="human_part_tracking" pkg="toy_assembly" type="human_part_tracking.py" output="screen" >  </node>
  <node name="gen_trajectory" pkg="toy_assembly" type="demo_generate_trajectory.py" output="screen" >  </node>


-->

</launch>